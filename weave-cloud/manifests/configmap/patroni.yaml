---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-operator
data:
  service_account_name: operator
  cluster_labels: application:spilo
  cluster_name_label: version
  pod_role_label: spilo-role
  db_hosted_zone: db.example.com
  debug_logging: "true"
  dns_name_format: '{cluster}.{team}.staging.{hostedzone}'
  docker_image: registry.opensource.zalan.do/acid/demospilo-10:1.3-p3
  secret_name_template: '{username}.{cluster}.credentials'
  etcd_host: ""
  infrastructure_roles_secret_name: postgresql-infrastructure-roles
  oauth_token_secret_name: postgresql-operator
  pam_configuration: |
    https://info.example.com/oauth2/tokeninfo?access_token= uid realm=/employees
  pam_role_name: zalandos
  pod_deletion_wait_timeout: 10m
  pod_label_wait_timeout: 10m
  ready_wait_interval: 3s
  ready_wait_timeout: 30s
  replication_username: standby
  resource_check_interval: 3s
  resource_check_timeout: 10m
  resync_period: 5m
  super_username: postgres
  enable_teams_api: "false"
  enable_team_superuser: "false"
  team_admin_role: "admin"
  teams_api_url: http://fake-teams-api.default.svc.cluster.local
  workers: "4"
  enable_load_balancer: "true"
  api_port: "8080"
  ring_log_lines: "100"
  cluster_history_entries: "1000"
  pod_terminate_grace_period: 5m
  pdb_name_format: "postgres-{cluster}-pdb"
  node_eol_label: "lifecycle-status:pending-decommission"
  node_readiness_label: ""
  team_api_role_configuration: "log_statement:all"